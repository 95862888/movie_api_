name: CI/CD Pipeline

on:
  push:
    branches:
      - variant

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push server
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/docker-image:latest

  test:
    name: Run tests and linters
    needs:
      - build
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "postgres"
          POSTGRES_HOST: "5432"

    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
            envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
            envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
            envkey_API_KEY: ${{ secrets.API_KEY }}
            file_name: .env
            fail_on_empty: false

      - name: Start the database
        run: docker-compose up -d db

      - name: Wait for the database to initialize
        run: docker-compose exec db sh -c 'while ! pg_isready --quiet; do sleep 1; done'

      - name: Run tests
        run: docker-compose run --rm server sh -c "pytest test_main.py"

      - name: Stop and remove the database
        run: docker-compose down -v

  deploy:
    name: Deploy to Server
    needs:
      - build
      - test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.HOST_SSH_KEY }}
            port: ${{ secrets.PORT }}
            script: |
              docker pull ${{ secrets.DOCKERHUB_USER }}/docker-image:latest
              docker run --env-file ~/tasks/KEKW/.env -d -p 80:80 ${{ secrets.DOCKERHUB_USER }}/docker-image:latest
              docker rm $(docker ps -a -f status=exited -f status=created -q)
